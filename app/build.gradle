import java.text.DateFormat
import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.zq.sdk'


kotlin {
    experimental {
        coroutines 'enable'
    }
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId "com.zq.zqplayer"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
            abiFilters 'x86','armeabi-v7a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64','armeabi', 'armeabi-v7a', 'arm64-v8a'
        }

    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    signingConfigs {
        config {
            keyAlias 'zaiqiang'
            keyPassword 'zaiqiang'
            storeFile file('../signature.jks')
            storePassword 'zaiqiang'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = outputFile.name.replace(outputFile.name, "zqplayer_${getGitBranch()}_${variant.buildType.name}_${releaseTime()}.apk")
                outputFileName = fileName
            }
        }
    }
}

// 打包时间
def releaseTime() {
    DateFormat df = new SimpleDateFormat("yyyyMMddHHmm")
    Calendar calendar = Calendar.getInstance()
    String dateName = df.format(calendar.getTime())
    return dateName
}

def getGitBranch() {
    return 'git symbolic-ref --short -q HEAD'.execute().text.trim()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //协程
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.7'
    //kotlinx-corountines-core - 在Kotlin中使用协程的主要接口
    //kotlinx-coroutines-android - 支持协同程序中的Android主线程

    api project(":playerlib")

    kapt("com.jakewharton:butterknife-compiler:10.2.1") {
        exclude module: 'support-annotations'
    }
    kapt ("com.google.dagger:dagger-compiler:2.24"){
        exclude module: 'support-annotations'
    }

    api "androidx.constraintlayout:constraintlayout:2.0.1"
    api "com.google.android.material:material:1.3.0-alpha02"

    api 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'

    //room 数据库
    implementation "androidx.room:room-runtime:2.2.5"
    kapt "androidx.room:room-compiler:2.2.5"
}

ZQSDK {
    //依赖 库
    //添加了基础库依赖，默认是添加最新版 “+”
    BaseLib{
       versionName '3.3.3'
    }
    CustomViewLib{
        versionName '3.3.2'
    }

    //会移除 基础库依赖
//    configurations.all {
//        exclude group: 'com.ziq.base', module: 'base'
//    }
}
